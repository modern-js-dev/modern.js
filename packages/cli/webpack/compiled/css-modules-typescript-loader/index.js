(()=>{var e={92:(e,t,r)=>{const n=r(147);const i=r(17);const s=r(285);const o=r(291);const a="// This file is automatically generated.\n// Please do not change this file!";const c="export const cssExports: CssExports;\nexport default cssExports;\n";const getNoDeclarationFileError=({filename:e})=>new Error(`Generated type declaration does not exist. Run webpack and commit the type declaration for '${e}'`);const getTypeMismatchError=({filename:e,expected:t,actual:r})=>{const n=new o(enforceLFLineSeparators(r),t).toString();return new Error(`Generated type declaration file is outdated. Run webpack and commit the updated type declaration for '${e}'\n\n${n}`)};const cssModuleToInterface=e=>{const t=e.sort().map((e=>`  '${e}': string;`)).join("\n");return`interface CssExports {\n${t}\n}`};const filenameToTypingsFilename=e=>{const t=i.dirname(e);const r=i.basename(e);return i.join(t,`${r}.d.ts`)};const enforceLFLineSeparators=e=>{if(e){return e.replace(/\r\n/g,"\n")}else{return e}};const compareText=(e,t)=>enforceLFLineSeparators(e)===enforceLFLineSeparators(t);const f=["emit","verify"];const isFileNotFound=e=>e&&e.code==="ENOENT";const makeDoneHandlers=(e,t,r)=>({failed:t=>e(t),success:()=>e(null,t,...r)});const makeFileHandlers=e=>({read:t=>n.readFile(e,{encoding:"utf-8"},t),write:(t,r)=>n.writeFile(e,t,{encoding:"utf-8"},r)});const extractLocalExports=e=>{let t=e.split("exports.locals")[1];if(!t){t=e.split("___CSS_LOADER_EXPORT___.locals")[1]}return t};e.exports=function(e,...t){const{failed:r,success:n}=makeDoneHandlers(this.async(),e,t);const i=this.resourcePath;const{mode:o="emit"}=s.getOptions(this)||{};if(!f.includes(o)){return r(new Error(`Invalid mode option: ${o}`))}const l=filenameToTypingsFilename(i);const{read:u,write:d}=makeFileHandlers(l);const p=/"([^\\"]+)":/g;let h;const _=[];const v=extractLocalExports(e);while(h=p.exec(v)){if(_.indexOf(h[1])<0){_.push(h[1])}}const m=`${a}\n${cssModuleToInterface(_)}\n${c}`;if(o==="verify"){u(((e,t)=>{if(isFileNotFound(e)){return r(getNoDeclarationFileError({filename:l}))}if(e){return r(e)}if(!compareText(m,t)){return r(getTypeMismatchError({filename:l,expected:m,actual:t}))}return n()}))}else{u(((e,t)=>{if(!compareText(m,t)){d(m,(e=>{if(e){r(e)}else{n()}}))}else{n()}}))}}},903:e=>{e.exports=function(e,t){var r=[];var n=e.length;var i=t.length;if(n==0)return i;if(i==0)return n;for(var s=n;s>=0;s--)r[s]=[];for(var s=n;s>=0;s--)r[s][0]=s;for(var o=i;o>=0;o--)r[0][o]=o;for(var s=1;s<=n;s++){var a=e.charAt(s-1);for(var o=1;o<=i;o++){if(s==o&&r[s][o]>4)return n;var c=t.charAt(o-1);var f=a==c?0:1;var l=r[s-1][o]+1;var u=r[s][o-1]+1;var d=r[s-1][o-1]+f;if(u<l)l=u;if(d<l)l=d;r[s][o]=l;if(s>1&&o>1&&a==t.charAt(o-2)&&e.charAt(s-2)==c){r[s][o]=Math.min(r[s][o],r[s-2][o-2]+f)}}}return r[n][i]}},291:(e,t,r)=>{"use strict";var n=function(){function defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||false;n.configurable=true;if("value"in n)n.writable=true;Object.defineProperty(e,n.key,n)}}return function(e,t,r){if(t)defineProperties(e.prototype,t);if(r)defineProperties(e,r);return e}}();function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}var i=r(903);var s=
/*!
 * Change
 * This is used for comparing two lines.
 *
 * @name Change
 * @function
 * @param {String} oldLine The old line value.
 * @param {String} addedLine The new line.
 * @param {Number} sensitivity The diff sensitivity.
 * @return {Change} The `Change` object:
 *
 *  - `_` (Array): An array with the old line and the new line.
 *  - `changes` (Number): How many changes are there, calculated with the levenshtein distance algorithm.
 *  - `modified` (Boolean): A boolean value representing if the old line was modified or not.
 */
function Change(e,t,r,n){_classCallCheck(this,Change);this._=[e,t];this.changes=i(e,t);this.modified=this.changes>r;this.lineno=n};var o=function(){function Diff(e,t,r){var n=this;_classCallCheck(this,Diff);this.sensitivity=r||0;this.changes=[];e=typeof e==="string"?e.split("\n"):e;t=typeof t==="string"?t.split("\n"):t;this.old_lines=e;this.new_lines=t;var i=null;t.forEach((function(t,r){i=e[r]||"";n.changes.push(new s(i,t,n.sensitivity,r+1))}))}n(Diff,[{key:"toString",value:function toString(){var e="",t={added:"",removed:""};this.changes.forEach((function(r){if(!r.modified){e+=t.removed;e+=t.added;t.removed="";t.added="";e+="   "+r._[1]+"\n"}else{t.removed+=" - "+r._[0]+"\n";if(r._[1]){t.added+=" + "+r._[1]+"\n"}}}));e+=t.removed;e+=t.added;return e}}]);return Diff}();e.exports=o},285:e=>{"use strict";e.exports=require("../loader-utils1")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var s=true;try{e[r](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[r]}return i.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var r=__nccwpck_require__(92);module.exports=r})();